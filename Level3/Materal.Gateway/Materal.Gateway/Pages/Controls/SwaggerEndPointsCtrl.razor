@page "/Setting/SwaggerEndPoints"
<PageTitle>Swagger配置-Materal.Gateway</PageTitle>
@using Materal.Gateway.OcelotExtension.ConfigModel;
@using Materal.Gateway.OcelotExtension.Services;
@inject IOcelotConfigService _ocelotConfigService;

<AntList Grid="_grid" DataSource="@_models">
    <Header>
        <Tooltip Title="添加">
            <Button Type="@ButtonType.Text" Icon="@IconType.Outline.FileAdd" OnClick="e => ShowModal(true, new())"></Button>
        </Tooltip>
    </Header>
    <ChildContent>
        <ListItem>
            <Card Title="@(context.Key)" Style="margin:10px 0 0 0;" BodyStyle="padding: 0;">
                <Extra>
                    <ButtonGroup>
                        <Tooltip Title="添加">
                            <Button Type="@ButtonType.Text" Icon="@IconType.Outline.FileAdd" OnClick="e => ShowItemModal(true, context, new())"></Button>
                        </Tooltip>
                        <Tooltip Title="编辑">
                            <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Edit" OnClick="e => ShowModal(false, context)"></Button>
                        </Tooltip>
                        <Tooltip Title="删除">
                            <Popconfirm Title="确定删除该配置?" OkText="删除" CancelText="取消" OnConfirm="e => OnDelete(context)">
                                <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Delete"></Button>
                            </Popconfirm>
                        </Tooltip>
                    </ButtonGroup>
                </Extra>
                <Body>
                    <AntList DataSource="@context.Config" Size="small">
                        <ChildContent Context="item">
                            <ListItem>
                                <span>@item.Name @item.Version 服务发现：@(item.TakeServersFromDownstreamService ? "是" : "否")</span>
                                <ButtonGroup>
                                    <Tooltip Title="编辑">
                                        <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Edit" OnClick="e => ShowItemModal(false, context, item)"></Button>
                                    </Tooltip>
                                    <Tooltip Title="删除">
                                        <Popconfirm Title="确定删除该配置?" OkText="删除" CancelText="取消" OnConfirm="e => OnDeleteItem(context, item)">
                                            <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Delete"></Button>
                                        </Popconfirm>
                                    </Tooltip>
                                </ButtonGroup>
                            </ListItem>
                        </ChildContent>
                    </AntList>
                </Body>
            </Card>
        </ListItem>
    </ChildContent>
</AntList>
<Modal Title="@(_isAdd?"添加Swagger配置":"编辑Swagger配置")" Visible="_visible" OnOk="OnModalOK" OnCancel="OnModalCancel">
    <SwaggerConfigCtrl @ref="_configCtrl" IsAdd="_isAdd" Model="_model"></SwaggerConfigCtrl>
</Modal>
<Modal Title="@(_isAdd?"添加Swagger配置项":"编辑Swagger配置项")" Visible="_itemVisible" OnOk="OnItemModalOK" OnCancel="OnItemModalCancel">
    <SwaggerItemConfigCtrl @ref="_itemCtrl" IsAdd="_isAdd" Parent="_model" Model="_itemModel"></SwaggerItemConfigCtrl>
</Modal>
@code {
    private ListGridType _grid = new() { Gutter = 16, Column = 4 };
    private List<SwaggerEndPointsModel> _models = new();
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ReloadData();
        }
        base.OnAfterRender(firstRender);
    }
    private void ReloadData()
    {
        _ocelotConfigService.Reload();
        _models = _ocelotConfigService.OcelotConfig.SwaggerEndPoints;
        StateHasChanged();
    }
    #region 弹窗
    private bool _isAdd = false;
    #endregion
    #region 配置
    private bool _visible = false;
    private SwaggerEndPointsModel _model = new();
    private SwaggerConfigCtrl? _configCtrl;
    private void ShowModal(bool isAdd, SwaggerEndPointsModel parent)
    {
        _isAdd = isAdd;
        _model = parent;
        _visible = true;
    }
    private void OnModalOK(MouseEventArgs args)
    {
        if (_configCtrl == null || !_configCtrl.Save()) return;
        _visible = false;
    }
    private void OnModalCancel(MouseEventArgs args)
    {
        ReloadData();
        _visible = false;
    }
    private void OnDelete(SwaggerEndPointsModel model)
    {
        _models.Remove(model);
        _ocelotConfigService.Save();
    }
    #endregion
    #region 项配置
    private SwaggerItemConfigCtrl? _itemCtrl;
    private bool _itemVisible = false;
    private SwaggerItemConfigModel _itemModel = new();
    private void ShowItemModal(bool isAdd, SwaggerEndPointsModel parent, SwaggerItemConfigModel model)
    {
        _isAdd = isAdd;
        _model = parent;
        _itemModel = model;
        _itemVisible = true;
    }
    private void OnItemModalOK(MouseEventArgs args)
    {
        if (_itemCtrl == null || !_itemCtrl.Save()) return;
        _itemVisible = false;
    }
    private void OnItemModalCancel(MouseEventArgs args)
    {
        ReloadData();
        _itemVisible = false;
    }
    private void OnDeleteItem(SwaggerEndPointsModel parent, SwaggerItemConfigModel model)
    {
        parent.Config.Remove(model);
        _ocelotConfigService.Save();
    }
    #endregion
}
