@page "/ConfigurationItems"
@page "/ConfigurationItems/{projectID:guid}"
@page "/ConfigurationItems/{projectID:guid}/{namespaceID:guid}"

@using RC.EnvironmentServer.DataTransmitModel.ConfigurationItem;
@using RC.EnvironmentServer.HttpClient;
@using RC.EnvironmentServer.PresentationModel.ConfigurationItem;
@using RC.ServerCenter.DataTransmitModel.Namespace;
@using RC.ServerCenter.DataTransmitModel.Project;
@using RC.ServerCenter.HttpClient;

@inherits BaseList<AddConfigurationItemRequestModel, EditConfigurationItemRequestModel, QueryConfigurationItemRequestModel, ConfigurationItemDTO, ConfigurationItemListDTO, ConfigurationItemHttpClient>;

@inject IMessageService _message;
@inject ProjectHttpClient _projectHttpClient;
@inject NamespaceHttpClient _namespaceHttpClient;

<PageTitle>配置管理-@WebAppConfig.AppTitle</PageTitle>

<Space Direction="DirectionVHType.Vertical" Style="width:100%;">
    <SpaceItem>
        <Form @ref="SearchForm" Loading="SearchLoading" Model="SearchModel" OnFinish="Reload">
            <Row Gutter="24">
                <GridCol Span="6">
                    <FormItem Label="项目">
                        <Select TItem="SelectDataModel<Guid>" TItemValue="Guid?" DataSource="projectData" ValueName="Value" LabelName="Name" @bind-Value="context.ProjectID" OnSelectedItemChanged="LoadAllNamespaces" />
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="命名空间">
                        <Select TItem="SelectDataModel<Guid>" TItemValue="Guid?" DataSource="namespaceData" ValueName="Value" LabelName="Name" @bind-Value="context.NamespaceID" OnSelectedItemChanged="Reload" />
                    </FormItem>
                </GridCol>
                <GridCol Span="6">
                    <FormItem Label="键">
                        <Input @bind-Value="context.Key" />
                    </FormItem>
                </GridCol>
            </Row>
            <Row>
                <GridCol Span="24" Style="text-align:right;">
                    <ButtonGroup>
                        <Tooltip Title="查询">
                            <Button Type="primary" Icon="@IconType.Outline.Search" HtmlType="submit"></Button>
                        </Tooltip>
                        <Tooltip Title="重置条件">
                            <Button Icon="@IconType.Outline.Retweet" OnClick="ResetSearchForm"></Button>
                        </Tooltip>
                        <Tooltip Title="新增">
                            <Button Icon="@IconType.Outline.FileAdd" OnClick="Add"></Button>
                        </Tooltip>
                    </ButtonGroup>
                </GridCol>
            </Row>
        </Form>
    </SpaceItem>
    <SpaceItem>
        <Table Loading="SearchLoading" DataSource="@TableData" PageIndex="SearchModel.PageIndex" PageSize="SearchModel.PageSize" PageSizeChanged="Reload" PageIndexChanged="Reload">
            <PropertyColumn Title="键" Property="m => m.Key"></PropertyColumn>
            <PropertyColumn Title="值" Property="c => c.Value"></PropertyColumn>
            <PropertyColumn Title="描述" Property="c => c.Description"></PropertyColumn>
            <ActionColumn Title="操作">
                <ButtonGroup>
                    <Tooltip Title="编辑">
                        <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Edit" OnClick="e => Edit(context.ID)"></Button>
                    </Tooltip>
                    <Tooltip Title="删除">
                        <Popconfirm Title="确定删除该程序?" OkText="删除" CancelText="取消" OnConfirm="e => Delete(context.ID)">
                            <Button Type="@ButtonType.Text" Icon="@IconType.Outline.Delete"></Button>
                        </Popconfirm>
                    </Tooltip>
                </ButtonGroup>
            </ActionColumn>
        </Table>
    </SpaceItem>
</Space>
@code {
    [Parameter]
    public Guid? ProjectID { get; set; }
    [Parameter]
    public Guid? NamespaceID { get; set; }
    private List<SelectDataModel<Guid>> projectData = new();
    private List<SelectDataModel<Guid>> namespaceData = new();
    protected override void OnInitialized()
    {
        RCData.OnChangeEnvironment += Reload;
        base.OnInitialized();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RCData.ShowDeploys = false;
            RCData.ShowEnvironments = true;
            LoadAllProjects();
        }
        base.OnAfterRender(firstRender);
    }
    protected override string GetDetailPageName => $"ConfigurationItems/ConfigurationItem/{SearchModel.ProjectID}/{SearchModel.NamespaceID}";
    protected override bool CanReload => !String.IsNullOrWhiteSpace(RCData.SelectedEnvironment);
    protected override void AfterResetSearchForm()
    {
        if (projectData.Count > 0)
        {
            SearchModel.ProjectID = projectData.First().Value;
        }
        if (namespaceData.Count > 0)
        {
            SearchModel.NamespaceID = namespaceData.First().Value;
        }
        Reload();
        base.AfterResetSearchForm();
    }
    protected override void Reload()
    {
        if (SearchModel.ProjectID == null || SearchModel.NamespaceID == null) return;
        base.Reload();
    }
    private void LoadAllProjects()
    {
        SearchLoading = true;
        HttpHandler.Handler(async () =>
        {
            projectData = await _projectHttpClient.GetSelectDataModelAsync();
            if (projectData.Count > 0)
            {
                SearchModel.ProjectID = (projectData.FirstOrDefault(m => m.Value == ProjectID) ?? projectData.First()).Value;
                LoadAllNamespaces();
            }
            else
            {
                _message.ShowError("无项目信息，请先添加项目");
            }
        });
    }
    private void LoadAllNamespaces()
    {
        SearchLoading = true;
        HttpHandler.Handler(async () =>
        {
            namespaceData = await _namespaceHttpClient.GetSelectDataModelAsync(SearchModel.ProjectID);
            if (namespaceData.Count > 0)
            {
                SearchModel.NamespaceID = (namespaceData.FirstOrDefault(m => m.Value == ProjectID) ?? namespaceData.First()).Value;
                Reload();
            }
            else
            {
                _message.ShowError("无命名空间信息，请先添加命名空间");
            }
        });
    }
}
