@using Materal.Utils.Http;

@inject CustomAuthenticationStateProvider authenticationState;

<div class="logo">服务器管理工具</div>
<NavMenu />
<div class="right-group">
    @if (RCData.ShowDeploys)
    {
        <Select TItem="SelectDataModel" TItemValue="string" Class="right-group-select" DataSource="RCData.Deploys" ValueName="Value" LabelName="Name" @bind-Value="RCData.SelectedDeploy" OnSelectedItemChanged="RCData.ChangeDeploy"></Select>
    }
    @if (RCData.ShowEnvironments)
    {
        <Select TItem="SelectDataModel" TItemValue="string" Class="right-group-select" DataSource="RCData.Environments" ValueName="Value" LabelName="Name" @bind-Value="RCData.SelectedEnvironment" OnSelectedItemChanged="RCData.ChangeEnvironment"></Select>
    }    
    <Button Class="right-group-button" Type="@ButtonType.Link" OnClick="Logout">退出</Button>
</div>

@code {
    protected override void OnInitialized()
    {
        RCData.OnChangeDeploy += RefreshPageState;
        RCData.OnChangeEnvironment += RefreshPageState;
        base.OnInitialized();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (!RCData.IsLoaded)
            {
                HttpHandler.Handler(async () =>
                {
                    await RCData.InitAsync();
                    SelectDataModel? deploy = RCData.Deploys.FirstOrDefault();
                    if (deploy != null)
                    {
                        RCData.SelectedDeploy = deploy.Value ?? string.Empty;
                    }
                    SelectDataModel? environment = RCData.Environments.FirstOrDefault();
                    if (environment != null)
                    {
                        RCData.SelectedEnvironment = environment.Value ?? string.Empty;
                    }
                    StateHasChanged();
                });
            }
        }
        base.OnAfterRender(firstRender);
    }
    private void RefreshPageState()
    {
        StateHasChanged();
    }
    private void Logout()
    {
        authenticationState.LoginOut();
    }
}