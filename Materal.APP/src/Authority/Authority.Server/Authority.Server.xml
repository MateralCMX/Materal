<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Authority.Server</name>
    </assembly>
    <members>
        <member name="T:Authority.Server.AutoMapperProfile.UserProfile">
            <summary>
            AutoMapper配置
            </summary>
        </member>
        <member name="M:Authority.Server.AutoMapperProfile.UserProfile.#ctor">
            <summary>
            AutoMapper配置
            </summary>
        </member>
        <member name="T:Authority.Server.Controllers.UserController">
            <summary>
            用户控制器
            </summary>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.#ctor(AutoMapper.IMapper,Authority.Services.IUserService)">
            <summary>
            用户控制器
            </summary>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.AddUserAsync(Authority.PresentationModel.User.AddUserRequestModel)">
            <summary>
            添加用户
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.EditUserAsync(Authority.PresentationModel.User.EditUserRequestModel)">
            <summary>
            修改用户
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.DeleteUserAsync(System.Guid)">
            <summary>
            删除用户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.GetUserInfoAsync(System.Guid)">
            <summary>
            获得用户信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.GetMyUserInfoAsync">
            <summary>
            获得我的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.GetUserListAsync(Authority.PresentationModel.User.QueryUserFilterRequestModel)">
            <summary>
            获得用户列表
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.LoginAsync(Authority.PresentationModel.User.LoginRequestModel)">
            <summary>
            登录
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.ResetPasswordAsync(System.Guid)">
            <summary>
            重置密码
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.ChangePasswordAsync(Authority.PresentationModel.User.ChangePasswordRequestModel)">
            <summary>
            修改密码
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Controllers.UserController.GetToken(Authority.DataTransmitModel.User.UserListDTO)">
            <summary>
            获得Token
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Authority.Server.Program">
            <summary>
            主程序
            </summary>
        </member>
        <member name="M:Authority.Server.Program.Main(System.String[])">
            <summary>
            入口
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Authority.Server.Program.CreateHostBuilder(System.String[])">
            <summary>
            创建主机
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Authority.Server.ServerDIExtension">
            <summary>
            依赖注入扩展
            </summary>
        </member>
        <member name="M:Authority.Server.ServerDIExtension.AddAuthorityServerServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Authority.Server.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:Authority.Server.Startup.#ctor">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:Authority.Server.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Authority.Server.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            配置
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
