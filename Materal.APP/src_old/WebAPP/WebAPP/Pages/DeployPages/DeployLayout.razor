@layout NavMenuLayout

@using WebAPP.HttpClientImpl

@inherits LayoutComponentBase

@inject NavigationManager _navigationManager
@inject MessageManage _messageManage

<style>
    .deploy_server_panel {
        position: fixed;
        right: 140px;
        top: 2px;
        height: 36px;
        background-color: white;
        z-index: 3;
        width: 400px;
        border-radius: 4px;
        display: flex;
    }
</style>

@Body
@if (UrlManage.DeployUrls?.Count > 0 && UrlManage.DeployUrl != null)
{
    <section class="deploy_server_panel">
        <MSelect @bind-Value="UrlManage.DeployUrl" Items="UrlManage.DeployUrls"></MSelect>
    </section>
}
@code { 
    #region 生命周期
    /// <summary>
    /// 组件呈现之后
    /// </summary>
    /// <param name="firstRender"></param>
    /// <returns></returns>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        if (UrlManage.DeployUrls?.Count > 0)
        {
            if (UrlManage.DeployUrl == null || string.IsNullOrWhiteSpace(UrlManage.DeployUrl.Key))
            {
                UrlManage.DeployUrl = UrlManage.DeployUrls.FirstOrDefault();
            }
            await base.OnAfterRenderAsync(true);
            StateHasChanged();
        }
        else
        {
            await _messageManage.WarningAsync("发布服务未开启");
            _navigationManager.NavigateTo("/");
        }
    }
    #endregion
}
