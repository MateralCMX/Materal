using ${ProjectName}.DataTransmitModel.${RelativeNamespace}.${Name};
using ${ProjectName}.Service.${RelativeNamespace}.Models.${Name};
using Materal.Model;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace ${ProjectName}.Service.${RelativeNamespace}
{
    /// <summary>
    /// ${Annotation}服务
    /// </summary>
    public interface I${Name}Service
    {
        /// <summary>
        /// 添加${Annotation}
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [DataValidation]
        Task AddAsync(Add${Name}Model model);
        /// <summary>
        /// 修改${Annotation}
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [DataValidation]
        Task EditAsync(Edit${Name}Model model);
        /// <summary>
        /// 删除${Annotation}
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [DataValidation]
        Task DeleteAsync(Guid id);
        /// <summary>
        /// 获得${Annotation}信息
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [DataValidation]
        Task<${Name}DTO> Get${Name}InfoAsync(Guid id);
        /// <summary>
        /// 获得${Annotation}信息
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        [DataValidation]
        Task<(List<${Name}ListDTO> result, PageModel pageModel)> Get${Name}ListAsync(Query${Name}FilterModel filterModel);
    }
}
